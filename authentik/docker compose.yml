services:
  postgres:
    image: docker.io/library/postgres:16.4
    container_name: authentik-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-authentik}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?error}
      - POSTGRES_DB=${POSTGRES_DB:-authentik}
      - TZ=${TZ:-UTC}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U "${POSTGRES_USER:-authentik}"']
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend

  redis:
    image: docker.io/library/redis:7.4.0
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - backend

  server:
    image: ghcr.io/goauthentik/server:2024.6.3
    container_name: authentik-server
    command: server
    environment:    
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-db
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD:?error}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY:?error}
    labels:  
      - "traefik.enable=true"
      - "traefik.http.routers.server-https.rule=Host(`authentik.domain.tech`)"
      - "traefik.http.routers.server-https.entrypoints=websecure"
      - "traefik.http.routers.server-https.tls=true"
      - "traefik.http.routers.server-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.server-https.service=server"
      - "traefik.http.services.server.loadBalancer.server.port=9000"
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - frontend
      - backend
    ports:
     - 389:389
     - 636:636  
  worker:
    image: ghcr.io/goauthentik/server:2024.6.3
    container_name: authentik-worker
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=authentik-redis
      - AUTHENTIK_POSTGRESQL__HOST=authentik-db
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER:-authentik}
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB:-authentik}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD:?error}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY:?error}
    volumes:
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - backend

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  frontend:
    external: true
  backend:
    external: true
